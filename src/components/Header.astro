---
import { getLangFromUrl, useTranslations } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const currentUrl = Astro.url.pathname;
const currentLang = currentUrl.split('/')[1];
const urlWithoutLang = currentUrl.slice(4);
const langToSwith = currentLang === 'es' ? 'en' : 'es';

---
<header aria-label="Page Header" class="bg-gray-200 bg-dark">
  <div class="mx-auto max-w-screen-xl px-3 py-6 sm:py-10 sm:px-6 lg:px-5">

    <nav>
      <div class="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
        <div class="relative flex h-16 items-center justify-between">

          <div class="flex flex-1 items-center justify-center sm:items-center sm:justify-between">

            <div class="text-center sm:text-left">
              <a href={`/${lang}`} class="text-2xl font-bold text-gray-800 dark:text-white">
                Kevin Fiorentino <span class="hidden md:inline">â€”â–³ðŸŒˆ</span>
              </a>
              <p class="mt-1.5 text-sm">
                Software Engineer | Bachelor's in Information Systems
              </p>
            </div>

            <div class="hidden sm:ml-6 md:block">
              <div class="flex space-x-4">
                <a href={`/${lang}`} title="Home" class="text-gray-500 dark:text-white hover:underline focus:ring px-4 py-1">
                  <span class="text-sm font-medium">Home</span>
                </a>
                <a href={`/${lang}/blog`} title="Blog" class="text-gray-500 dark:text-white hover:underline focus:ring px-4 py-1">
                  <span class="text-sm font-medium">Blog</span>
                </a>
              </div>
            </div>

            <div class="flex justify-center items-center">

              <div class="flex justify-between items-center">
                <button id="toggle-dark-mode" class="inline-flex items-center justify-center rounded-md text-gray-400 hover:opacity-75 focus:ring-2 focus:ring-inset focus:ring-blue p-2">
                  <svg id="moon-icon" fill="none" stroke-width="1.5" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path fill="white" stroke-linecap="round" stroke-linejoin="round" d="M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z"></path>
                  </svg>
                  <svg id="sun-icon" class="hide-icon" stroke="#E1C546" stroke-width="1.5" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path class="fill-alternative" stroke-linecap="round" stroke-linejoin="round" d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z"></path>
                  </svg>
                </button>
                <a href={`/${langToSwith}/${urlWithoutLang}`} class="flex justify-center items-center ml-4" title={langToSwith}>
                  <svg class="lang-icon h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960">
                    <path d="M480-80q-82 0-155-31.5t-127.5-86Q143-252 111.5-325T80-480q0-83 31.5-155.5t86-127Q252-817 325-848.5T480-880q83 0 155.5 31.5t127 86q54.5 54.5 86 127T880-480q0 82-31.5 155t-86 127.5q-54.5 54.5-127 86T480-80Zm0-82q26-36 45-75t31-83H404q12 44 31 83t45 75Zm-104-16q-18-33-31.5-68.5T322-320H204q29 50 72.5 87t99.5 55Zm208 0q56-18 99.5-55t72.5-87H638q-9 38-22.5 73.5T584-178ZM170-400h136q-3-20-4.5-39.5T300-480q0-21 1.5-40.5T306-560H170q-5 20-7.5 39.5T160-480q0 21 2.5 40.5T170-400Zm216 0h188q3-20 4.5-39.5T580-480q0-21-1.5-40.5T574-560H386q-3 20-4.5 39.5T380-480q0 21 1.5 40.5T386-400Zm268 0h136q5-20 7.5-39.5T800-480q0-21-2.5-40.5T790-560H654q3 20 4.5 39.5T660-480q0 21-1.5 40.5T654-400Zm-16-240h118q-29-50-72.5-87T584-782q18 33 31.5 68.5T638-640Zm-234 0h152q-12-44-31-83t-45-75q-26 36-45 75t-31 83Zm-200 0h118q9-38 22.5-73.5T376-782q-56 18-99.5 55T204-640Z">
                    </path>
                  </svg>
                  <span class="uppercase text-gray-500 dark:text-white ml-1">
                    {langToSwith}
                  </span>
                </a>
              </div>

              <div class="inset-y-0 left-0 flex items-center md:hidden ml-2">
                <!-- Mobile menu button -->
                <button id="toggle-mobile-menu" type="button" class="inline-flex items-center justify-center rounded-md text-gray-400 hover:opacity-75 focus:ring-2 focus:ring-inset focus:ring-blue p-2" aria-controls="mobile-menu" aria-expanded="false">
                  <span class="sr-only">Open main menu</span>
                  <svg id="menu-open" class="block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">            <!-- aria-hidden="true" -->
                    <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
                  </svg>
                  <svg id="menu-close" class="hidden h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>

            </div>

          </div>

        </div>
      </div>

      <!-- Mobile menu, show/hide based on menu state. -->
      <div id="mobile-menu" class="hidden md:hidden mt-3">
        <div class="text-center space-y-1 px-2 pb-3 pt-2">

          <a href={`/${lang}`} title="Home" class="text-gray-500 dark:text-white hover:underline block rounded-md px-3 py-2 text-base font-medium">
            <span class="text-sm font-medium">Home</span>
          </a>
          <a href={`/${lang}/blog`} title="Blog" class="text-gray-500 dark:text-white hover:underline block rounded-md px-3 py-2 text-base font-medium">
            <span class="text-sm font-medium">Blog</span>
          </a>

          <hr>

        </div>
      </div>

    </nav>

  </div>
</header>

<script>
  // Script Menu Mobile
  const elementMenu = document.getElementById('mobile-menu');
  const svgOpen = document.getElementById('menu-open');
  const svgClose = document.getElementById('menu-close');
  document.getElementById('toggle-mobile-menu')
    ?.addEventListener('click', () => {
      elementMenu?.classList.toggle('hidden');
      svgOpen?.classList.toggle('hidden');
      svgClose?.classList.toggle('hidden');
    });
</script>

<script>
  // Script Dark Mode
  const elementHtml = document.getElementById('kevin');
  const svgMoon = document.getElementById('moon-icon');
  const svgSun = document.getElementById('sun-icon');

  const dark = localStorage.getItem('kevin-theme');
  if (dark && dark == 'false') {
    elementHtml?.classList.toggle('dark');
    svgMoon?.classList.toggle('hide-icon');
    svgSun?.classList.toggle('hide-icon');
  }

  document.getElementById('toggle-dark-mode')
    ?.addEventListener('click', () => {
      elementHtml?.classList.toggle('dark');
      svgMoon?.classList.toggle('hide-icon');
      svgSun?.classList.toggle('hide-icon');
      localStorage.setItem('kevin-theme', elementHtml?.classList.contains('dark') ? 'true' : 'false');
    });
</script>

<style is:global lang="scss">
.dark {
  .lang-icon {
    path {
      fill: var(--white);
    }
  }
}
</style>

<style lang="scss">
#moon-icon, #sun-icon {
  width: 24px;
  height: 24px;
}
.hide-icon {
  display: none;
}
.lang-icon {
  path {
    fill: #6B7280;
  }
}
</style>
