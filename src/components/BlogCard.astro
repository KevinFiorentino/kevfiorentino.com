---
export interface Props {
  slug: string;
  collection: string;
	title: string;
  description: string;
  image: {
    url: string,
    alt: string
  };
  pubDate: Date;
}

import { getLangFromUrl, useTranslations } from '@i18n/utils';

const {
  slug,
  collection,
  title,
  description,
  image,
  pubDate,
} = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];
const year = pubDate.getFullYear();
const month = months[pubDate.getMonth()];
const day = pubDate.getDate();
---

<article class="blog-card card-background">
  <a href={`/${lang}/blog/${collection}/${slug.slice(3)}`} title={ title } class="flex transition">
    <div class="rotate-180 p-2 [writing-mode:_vertical-lr]">
      <time datetime={ pubDate.toString() } class="flex items-center justify-between text-white text-xs font-bold uppercase gap-4">
        <span>{ year }</span>
        <span class="w-px flex-1"></span>
        <span>{ month } { day }</span>
      </time>
    </div>

    <div class="hidden sm:block sm:basis-56">
      <img class="asd aspect-square rounded-none h-full w-full object-cover" src={ image.url } alt={ image.alt }/>
    </div>

    <div class="flex flex-1 flex-col justify-between">
      <div class="border-l border-gray-900/10 p-3 dark:border-white/10 sm:!border-l-transparent sm:p-4">
        <h3 class="text-white font-bold uppercase">
          { title }
        </h3>
        <p class="mt-2 text-sm leading-relaxed text-white line-clamp-3">
          { description }
        </p>
      </div>

      <div class="sm:flex sm:items-end sm:justify-end">
        <div class="text-white btn-read px-5 py-3 text-center text-xs font-bold uppercase transition">
          Read Article
        </div>
      </div>
    </div>
  </a>
</article>

<style lang="scss">
.blog-card {
  position: relative;

  a {
    position: relative;
    z-index: 1;
  }
  h3 {
    -webkit-text-fill-color: white;
    line-height: 30px;
  }
  &.card-background {
    background: var(--bg-gradient);
  }
  .btn-read {
    background-color: var(--alternative);
    height: 50px;
    margin-bottom: -13px;
    clip-path: polygon(0 0,100% 0,100% 75%,0% 100%,0 75%);
  }

}
/* .blog-card a:hover, .blog-card a:focus {
  box-shadow: 0 8px 32px 0 rgba(31,38,135,0.37);
} */

.blog-card::before, .blog-card::after {
  content: "";
  position: absolute;
  background: var(--primary);
  width: 100%;
  height: 200px;
  left: 0;
  overflow: hidden;
  backface-visibility: visible;
}
.blog-card::before {
  clip-path: polygon(0 25%, 75% 0, 100% 25%, 100% 100%, 0 100%);
  top: -50px;
}
.blog-card::after {
  clip-path: polygon(0 0, 100% 0, 100% 75%, 25% 100%, 0 75%);
  bottom: -50px;
}

@media (max-width: 640px) {
  .blog-card::before, .blog-card::after {
    height: 170px;
  }
}

</style>
