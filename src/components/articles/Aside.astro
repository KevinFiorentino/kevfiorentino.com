---
export interface Props {
  relatedPosts?: {
    collection: string,
    slug: string
  };
}

import { getEntries } from 'astro:content';
import { getLangFromUrl } from '@i18n/utils';
import { collectionMetadata } from '@content/config';

import '@styles/aside.scss';

const lang = getLangFromUrl(Astro.url);

const { relatedPosts } = Astro.props;
const relateds = relatedPosts ? await getEntries(relatedPosts as any) : null;

---

<aside class="bg-polygon relative bg-gray-200 dark:bg-gray-700 p-3 sm:p-4">
  <div class="relative z-10">
    <div class="flex flex-col">
      <h3>{ relateds ? 'Related content' : '' }</h3>
      {
        relateds?.map((post: any) => (
          post ? <a href={`/${lang}/blog/${post.collection}/${post.slug.slice(3)}`} class="hover:opacity-80" title={ post.data.title }>
            <h4 class="text-gradient">{ post.data.title }</h4>
            <p class="text-gradient">{ post.data.description }</p>
            <small class="block text-right w-full">
              Read Article
            </small>
            <hr class="my-4" />
          </a> : null
        ))
      }
    </div>
    <div>
      <h3>Might interest you</h3>
      <ul class="colls-box flex flex-wrap" role="list">
        {
          collectionMetadata?.map((coll: any) => (
            <li class="coll" role="listitem">
              <a href={`/${lang}/blog/${coll.name}`} class="capitalize" title={`Collection: ${coll.name}`}>
                { coll.name }
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</aside>

<style lang="scss">
.colls-box {
  li {
    position: relative;
    background-color: var(--accent);
    border: 0px solid var(--accent);
    margin: 12px 5px;

    a {
      position: relative;
      color: var(--white);
      display: block;
      padding: 0 10px;
      border: transparent;
      z-index: 10;
    }
    a::before, a::after {
      content: "";
      position: absolute;
      background: var(--accent);
      width: 100%;
      height: 15px;
      left: 0;
      overflow: hidden;
      backface-visibility: visible;
      transition: .5s;
    }
    a::before {
      clip-path: polygon(0 25%, 75% 0, 100% 25%, 100% 100%, 0 100%);
      top: -10px;
    }
    a::after {
      clip-path: polygon(0 0, 100% 0, 100% 75%, 25% 100%, 0 75%);
      bottom: -10px;
    }
    a:hover::before, a:focus::before {
      clip-path: polygon(0 25%, 25% 0, 100% 25%, 100% 100%, 0 100%);
      transition: .5s;
    }
    a:hover::after, a:focus::after {
      clip-path: polygon(0 0, 100% 0, 100% 75%, 75% 100%, 0 75%);
      transition: .5s;
    }
  }
}
</style>
