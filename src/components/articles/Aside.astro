---
export interface Props {
  title: string,
  description: string,
  relatedPosts?: {
    collection: string,
    slug: string
  };
}

import { getEntries } from 'astro:content';
import { getLangFromUrl, useTranslations } from '@i18n/utils';
import { collectionMetadata } from '@content/config';
import ShareSocialMedia from '@components/articles/ShareSocialMedia.astro';

import '@styles/aside.scss';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const { title, description, relatedPosts } = Astro.props;
const relateds = relatedPosts ? await getEntries(relatedPosts as any) : null;
---

<aside class="relative p-3 sm:p-4">
  <div class="relative z-10">
    <div class="flex flex-col">
      <h3>{ relateds ? 'Related content' : '' }</h3>
      {
        relateds?.map((post: any) => (
          post ? <a href={`/${lang}/blog/${post.collection}/${post.slug.slice(3)}`} class="hover:opacity-80" title={ post.data.title }>
            <h4 class="text-gradient">{ post.data.title }</h4>
            <p class="">{ post.data.description }</p>
            <small class="block text-right w-full">
              {t('read-post')}
            </small>
          </a> : null
        ))
      }
      { relateds ? <hr class="my-4" /> : '' }
    </div>
    <div>
      <h3>{t('aside.recommends')}</h3>
      <ul class="colls-box flex flex-wrap" role="list">
        {
          collectionMetadata?.map((coll: any) => (
            <li class="coll" role="listitem">
              <a href={`/${lang}/blog/${coll.name}`} class="capitalize" title={`${t('collection')}: ${coll.name}`}>
                { coll.name }
              </a>
            </li>
          ))
        }
      </ul>
      <hr class="my-4" />
    </div>
    <div>
      <h3>{t('share')}</h3>
      <ShareSocialMedia
        title={title}
        description={description}
      ></ShareSocialMedia>
    </div>
  </div>
</aside>
