---
export interface Props {
  relatedPosts?: {
    collection: string,
    slug: string
  };
}

import { getEntries } from 'astro:content';
import { getLangFromUrl } from '@i18n/utils';
import { collectionMetadata } from '@content/config';

import '@styles/aside.scss';

const lang = getLangFromUrl(Astro.url);

const { relatedPosts } = Astro.props;
const relateds = relatedPosts ? await getEntries(relatedPosts as any) : null;

---

<aside class="bg-polygon relative bg-gray-200 dark:bg-gray-700 p-3 sm:p-4">
  <div class="relative z-10">
    <div class="flex flex-col">
      <h3>{ relateds ? 'Related content' : '' }</h3>
      {
        relateds?.map((post: any) => (
          post ? <a href={`/${lang}/blog/${post.collection}/${post.slug.slice(3)}`} class="hover:opacity-80" title={ post.data.title }>
            <h4 class="text-gradient">{ post.data.title }</h4>
            <p class="text-gradient">{ post.data.description }</p>
            <small class="block text-right w-full">
              Read Article
            </small>
            <hr class="my-4" />
          </a> : null
        ))
      }
    </div>
    <div>
      <h3>Might interest you</h3>
      <div class="flex flex-wrap">
        {
          collectionMetadata?.map((coll: any) => (
            <a href={`/${lang}/blog/${coll.name}`} class="badge capitalize hover:opacity-80 mt-3 mr-2" title={`Collection: ${coll.name}`}>
              { coll.name }
            </a>
          ))
        }
      </div>
    </div>
  </div>
</aside>
