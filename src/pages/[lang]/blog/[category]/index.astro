---
import { getCollection } from 'astro:content';
import { collectionMetadata } from '@content/config';
import { languages } from '@i18n/ui';
import { getLangFromUrl, useTranslations } from '@i18n/utils';
import MainLayout from '@layouts/MainLayout.astro';
import BlogCard from '@components/BlogCard.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

export async function getStaticPaths() {

  const pages: any[] = [];

  // Build category pages
  for await (let c of collectionMetadata) {
    const posts = await getCollection(c.name as any);

    Object.keys(languages).map((l: string) => {
      pages.push({
        params: {
          lang: l,
          category: c.name
        },
        props: {
          category: c.name,
          posts: posts.filter(p => (p.slug.split('/')[0] == l))
        },
      });
    });
  }

  return pages;
}

const param = Astro.params;
const post = Astro.props;
---

<MainLayout
  title={`Blog ${param.category} | Kevin Fiorentino`}
  description={`Kevin Fiorentino's blog about ${post.category}`}
  image='/kevin.webp'
  addWidth={true}
>
  <div>
    <a href={`/${lang}/blog`} title={t('go-blog')} class="dark:text-white hover:underline">
      Blog
    </a>
    <h1 class="text-gradient capitalize mt-0">
      {param.category}
    </h1>
    <hr><br>
  </div>
  <br><br>
  <div role="list" class="cards-grid">
    {
      post.posts.map((item: any) => (
        <div>
          <BlogCard
            slug={item.slug}
            collection={item.collection}
            title={item.data.title}
            description={item.data.description}
            image={item.data.image}
            pubDate={item.data.pubDate}
          >
          </BlogCard>
        </div>
      ))
    }
  </div>
</MainLayout>
