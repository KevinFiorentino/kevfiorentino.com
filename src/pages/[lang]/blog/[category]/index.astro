---
import { getCollection } from 'astro:content';
import { collectionMetadata } from '@content/config';
import { languages } from '@i18n/ui';
import MainLayout from '@layouts/MainLayout.astro';
import BlogCard from '@components/BlogCard.astro';

export async function getStaticPaths() {

  const pages: any[] = [];

  // Build category pages
  for await (let c of collectionMetadata) {
    const posts = await getCollection(c.name as any);

    Object.keys(languages).map((l: string) => {
      pages.push({
        params: {
          lang: l,
          category: c.name
        },
        props: {
          category: c.name,
          posts: posts.filter(p => (p.slug.split('/')[0] == l))
        },
      });
    });
  }

  return pages;
}

const param = Astro.params;
const post = Astro.props;
---

<MainLayout
  title={`Blog ${param.category} | Kevin Fiorentino`}
  description={`Kevin Fiorentino's blog about ${post.category}`}
>
  <h1 class="text-gradient">
    Blog {param.category}
  </h1>
  <div role="list" class="link-card-grid">
    {
      post.posts.map((item: any) => (
        <BlogCard
          slug={item.slug}
          collection={item.collection}
          title={item.data.title}
          desc={item.data.desc}
          image={item.data.image}
          date={item.data.date}
        >
        </BlogCard>
      ))
    }
  </div>
</MainLayout>

<style>
.link-card-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
  padding: 0;
}
@media (max-width: 768px) {
  .link-card-grid {
    grid-template-columns: 1fr;
  }
}
</style>
