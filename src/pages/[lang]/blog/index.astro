---
import { languages } from '@i18n/ui';
import { getLangFromUrl, useTranslations } from '@i18n/utils';
import { getEntry } from 'astro:content';
import MainLayout from '@layouts/MainLayout.astro';
import BlogCard from '@components/BlogCard.astro';
import CollectionsList from '@components/CollectionsList.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

export async function getStaticPaths() {
  const pages: any[] = [];

  const main: any[] = [];
  const p1 = await getEntry('blockchain', 'web2-vs-web3');
  const p2 = await getEntry('solana', 'behind-solana');
  const p3 = await getEntry('solana', 'proof-of-history');
  const p4 = await getEntry('ethereum', 'erc20-token');
  const p5 = await getEntry('solidity', 'reentrancy-attack');
  const p6 = await getEntry('openzeppelin', 'escrow');
  const p7 = await getEntry('openzeppelin', 'governance');
  const p8 = await getEntry('bitcoin', 'architecture');
  main.push(p1, p2, p3, p4, p5, p6, p7, p8);

  const others: any[] = [];
  const p9 = await getEntry('openzeppelin', 'upgradeable');
  const p10 = await getEntry('ethereum', 'erc721-token');
  const p11 = await getEntry('bitcoin', 'merkle-trees');
  const p12 = await getEntry('bitcoin', 'inputs-outputs');
  const p13 = await getEntry('solidity', 'good-practices');
  const p14 = await getEntry('solidity', 'dos-attack');
  const p15 = await getEntry('solana', 'tower-bft');
  const p16 = await getEntry('solana', 'wrap-up');
  others.push(p9, p10, p11, p12, p13, p14, p15, p16);

  Object.keys(languages).map((l: string) => {
    pages.push({
      params: { lang: l },
      props: {
        main: main,
        others: others,
      },
    });
  });

  return pages;
}

const param = Astro.params;
const { main, others } = Astro.props;
---

<MainLayout
  title={`Blog | Kevin Fiorentino`}
  description={`Kevin Fiorentino's personal blog`}
  image="/kevin2025.jpg"
  addWidth={false}
>
  <section class="main-width">
    <h1 class="text-gradient mb-3 mt-0">
      Blog
    </h1>
    <hr class="mt-2 mb-0">
    <br><br>
    <div role="list" class="cards-grid">
      {
        main.map((item: any) => (
          <div>
            <BlogCard
              slug={item.slug}
              collection={item.collection}
              title={param.lang == 'es' ? item.data.title : item.data.englishMetadata.title}
              description={param.lang == 'es' ? item.data.description : item.data.englishMetadata.description}
              image={item.data.image}
              pubDate={item.data.pubDate}
            >
            </BlogCard>
          </div>
        ))
      }
    </div>

  </section>

  <br><br><br>

  <CollectionsList></CollectionsList>

  <br><br><br>

  <section class="main-width">
    <h2>
      {t('blog.others')}
    </h2>
    <hr class="mt-2 mb-0">
    <br><br>
    <div role="list" class="cards-grid">
      {
        others.map((item: any) => (
          <div>
            <BlogCard
              slug={item.slug}
              collection={item.collection}
              title={param.lang == 'es' ? item.data.title : item.data.englishMetadata.title}
              description={param.lang == 'es' ? item.data.description : item.data.englishMetadata.description}
              image={item.data.image}
              pubDate={item.data.pubDate}
            >
            </BlogCard>
          </div>
        ))
      }
    </div>

  </section>

</MainLayout>
