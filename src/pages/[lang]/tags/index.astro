---
import { getCollection } from 'astro:content';
import { collectionMetadata } from '@content/config';
import { languages } from '@i18n/ui';
import { getLangFromUrl, useTranslations } from '@i18n/utils';
import MainLayout from '@layouts/MainLayout.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

export async function getStaticPaths() {

  const pages: any[] = [];
  let tags: string[] = [];

  // Get all tags on every category
  for await (let c of collectionMetadata) {
    const coll = await getCollection(c.name as any);
    tags = tags.concat([...new Set(coll.map((post) => post.data.tags).flat())]);
  }

  // Remove duplicated tags
  tags = [...new Set(tags)];

  Object.keys(languages).forEach((l: string) => {
    pages.push({
      params: { lang: l },
      props: {
        tags: tags
      },
    });
  });

  return pages;
}

const param = Astro.params;
const tags = Astro.props.tags;
---

<MainLayout
  title={`Tags | Kevin Fiorentino`}
  description={`Kevin Fiorentino's tags`}
  image="/kevin.webp"
  addWidth={false}
>
  <br><br>

  <section class="tags-page bg-polygon relative" style="background: var(--primary);">
    <div class="main-width">

      <h1 class="text-gradient relative z-10">
        Tags
      </h1>
      <ul class="badges relative z-10" role="list">
        {tags.map((tag: string) => (
          <li class="badge-box">
            <a class="badge capitalize" href={`/${lang}/tags/${tag}`} title={`Tag: ${tag}`} role="listitem">
              {tag}
            </a>
          </li>
        ))}
      </ul>

      <br><br>

    </div>
  </section>

  <br><br><br>

</MainLayout>

<style lang="scss">
.tags-page {
  h1 {
    -webkit-text-fill-color: white;
  }
}
</style>
